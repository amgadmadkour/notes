{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"notes.html","title":"Notes","text":"<p>The following notes represent a collection of topics that I have found useful in my work. They are meant to be a quick reference guide for myself, but I hope they can be useful to others as well. The notes are published as mkdocs pages for easy navigation and search.</p>"},{"location":"notes.html#topics","title":"Topics","text":"<ol> <li>Python: Primer for a set of topics that cover the python programming language.</li> <li>Machine Learning: Primer for a set of topics that cover machine learning including deep learning.</li> </ol>"},{"location":"ml/ml.html","title":"Machine Learning","text":""},{"location":"ml/ml.html#what-is-machine-learning","title":"What is Machine Learning?","text":"<p>Machine Learning is the field of study that gives computers the ability to learn without being explicitly programmed. - Arthur Samuel, 1959</p> <p>From an engineering perspective, machine learning can be defined as:</p> <ul> <li>P: Performance</li> <li>T: Task</li> <li>E: Experience</li> </ul> <p>For example, a spam filter is a task, and the performance is the accuracy of the filter. The experience is the training data that the filter is trained on. The goal of machine learning is to improve the performance of a task by learning from experience. In the case of the spam filter, the goal is to improve the accuracy of the filter by learning from training data.</p> <p>Machine learning is suitable for the following problems</p> <ul> <li>Require a lot of hand-tuning or long lists of rules.</li> <li>Complex where traditional methods do not work well.</li> <li>Fluctuating over time where the data changes frequently.</li> </ul> <p>The alternative to machine learning is hand-crafted rules. For example, a spam filter could be built by hand-crafting rules such as:</p> <ul> <li>If the email contains the word \"coupon\", then it is spam.</li> <li>If the email is from a known spammer, then it is spam.</li> <li>If the email is from a friend, then it is not spam.</li> </ul> <p>The problem with hand-crafted rules is that they are brittle. For example, if the word \"coupon\" is replaced with \"koupon\",then the rule will not work. Machine learning is more robust because it learns which words are associated with spam from the data.</p>"},{"location":"ml/ml.html#components","title":"Components","text":"<p>The three major components of a machine learning system are:</p> <ul> <li>Data</li> <li>Model</li> <li>Learning</li> </ul>"},{"location":"ml/ml.html#types-of-learning","title":"Types of Learning","text":"<p>There are several ways to categorize machine learning algorithms. One way is to categorize them by the type of learning they use. The following is a list of the types of learning:</p> <ol> <li>Trained using human supervision.<ol> <li>Supervised Learning : The training data is labeled.</li> <li>Unsupervised Learning: The training data is unlabeled.</li> <li>Semi-supervised Learning: The training data is partially labeled.</li> <li>Reinforcement Learning: The training data is the result of an agent interacting with an environment.</li> </ol> </li> <li>Learn by detecting patterns.<ol> <li>Instance-based Learning: The system learns the training data and uses a similarity measure to generalize to new instances.</li> <li>Model-based Learning: The system learns a model of the training data and uses the model to generalize to new instances.</li> </ol> </li> <li>Learn incrementally or on the fly.<ol> <li>Online Learning: The system learns incrementally from a stream of data.</li> <li>Batch Learning: The system learns from a fixed dataset.</li> </ol> </li> </ol>"},{"location":"ml/ml.html#pillars-of-machine-learning","title":"Pillars of Machine Learning","text":"<ul> <li>Classification</li> <li>Regression</li> <li>Dimensionality Reduction</li> <li>Density Estimation</li> </ul>"},{"location":"ml/resources.html","title":"Resources","text":""},{"location":"ml/resources.html#books","title":"Books","text":"<ol> <li>Data Science from Scratch</li> <li>The Hundred Pages Machine Learning Book</li> <li>Hands-On Machine Learning with Scikit-Learn, Keras, and Tensorflow</li> <li>Deep Learning</li> <li>Deep Learning with Python</li> <li>AI and Machine Learning for Coders</li> <li>Deep Learning from Scratch</li> <li>Dive into Deep Learning</li> <li>Probabilistic Machine Learning</li> </ol>"},{"location":"ml/resources.html#courses","title":"Courses","text":"<ol> <li>Machine Learning</li> <li>Backpropagation explained | Part 1 - The intuition - YouTube</li> <li>Deep Learning Specialization</li> <li>Tensorflow Developer Professional Certification</li> <li>Tensorflow: Advanced Techniques</li> <li>Machine Learning in Production</li> <li>MIT Deep Learning 6.S191</li> <li>DS-GA 1008 Deep Learning</li> <li>CS 182: Deep Learning</li> <li>CS5785 Applied Machine Learning</li> <li>Deep Learning: CS 182 Spring 2021</li> <li>NYU Deep Learning SP20</li> <li>Deep Learning Crash Course 2021</li> <li>CMU Neural Nets for NLP 2021</li> <li>Deep Reinforcement Learning: CS 285 Fall 2020 - YouTube</li> <li>CS 329S: Machine Learning Systems Design</li> <li>Full Stack Deep Learning</li> <li>STAT 479: Machine Learning University Wisconsin-Madison</li> <li>Made With ML</li> <li>Practical Deep Learning for Coders (fast.ai)</li> <li>CS 330 Deep Multi-Task and Meta Learning (stanford.edu)</li> </ol>"},{"location":"ml/resources.html#blog-posts","title":"Blog Posts","text":"<ol> <li>MIT Deep Learning Basics: Introduction and Overview with TensorFlow | by Lex Fridman | TensorFlow | Medium</li> <li>Transformers from Scratch (e2eml.school)</li> <li>E2EML.school</li> <li>Machine Learning Glossary</li> </ol>"},{"location":"ml/resources.html#educational-projects","title":"Educational Projects","text":"<ol> <li>Titanic - Machine Learning from Disaster</li> <li>House Prices - Advanced Regression Techniques</li> <li>Heart Disease UCI</li> <li>Digit Recognizer</li> <li>Sentiment140 dataset with 1.6 million tweets</li> <li>Pima Indians Diabetes Database</li> <li>Breast Cancer Classification</li> <li>TMDB Box Office Prediction</li> <li>Mall Customer Segmentation Data</li> <li>Store Item Demand Forecasting Challenge</li> <li>Market Basket Optimization</li> <li>New York City Taxi Trip Duration</li> <li>SMS Spam Collection Dataset</li> <li>(MBTI) Myers-Briggs Personality Type Dataset</li> </ol>"},{"location":"ml/resources.html#tools-and-platforms","title":"Tools and Platforms","text":"<ol> <li>Weights &amp; Biases \u2013 Developer tools for ML (wandb.ai)</li> <li>MLflow - A platform for the machine learning lifecycle | MLflow</li> <li>PlotNeuralNet: Latex code for making neural networks diagrams (github.com)</li> </ol>"},{"location":"ml/resources.html#frameworks","title":"Frameworks","text":"<ol> <li>TensorFlow</li> <li>PyTorch</li> </ol>"},{"location":"ml/algorithm/supervised/decision-tree.html","title":"Decision Tree","text":""},{"location":"ml/algorithm/supervised/k-nearest-neighbors.html","title":"k-Nearest Neighbors","text":""},{"location":"ml/algorithm/supervised/linear-regression.html","title":"Linear Regression","text":"<p>A statistical modeling technique that is used for understanding the relationship between a dependent variable and a one or more independent variables.</p> <p>For example, a house price is considered a dependent variable because its what we want to predict while the independent variables would be the house size, number of rooms, and so forth. A linear regression model helps us predict the value of dependent variable based on the independent variables. The objective of linear regression is to determine the best-fit line that minimizes the difference between the dependent variable and independent variables. Univariate linear regression involves only one independent variable, e.g. house size being the independent variable for predicting the price. The equation of a linear regression model is a straight-line equation represented as follows:</p> \\[f_{w,b}(x^{(i)}) = wx^{(i)} + b\\] <p>where</p> <ul> <li>\\(f\\) is a function that takes the input x</li> <li>\\(x\\) is the input feature or independent variable</li> <li>\\(x^{(i)}\\) is the ith instance of input \\(x\\)</li> <li>\\(w\\), \\(b\\) are called the parameters</li> </ul> <p>\\(w\\) and \\(b\\) are the parameters of the model. In machine learning, parameters of a model are the variable used during training in order to improve the model. Parameters are also called coefficients or weights.</p>"},{"location":"ml/algorithm/supervised/logistic-regression.html","title":"Logistic Regression","text":""},{"location":"ml/algorithm/supervised/neural-network.html","title":"Neural Network","text":""},{"location":"ml/algorithm/supervised/random-forest.html","title":"Random Forest","text":""},{"location":"ml/algorithm/supervised/support-vector-machine.html","title":"Support Vector Machine","text":""},{"location":"ml/algorithm/unsupervised/apriori.html","title":"Apriori","text":""},{"location":"ml/algorithm/unsupervised/dbscan.html","title":"DBSCAN","text":""},{"location":"ml/algorithm/unsupervised/eclat.html","title":"Eclat","text":""},{"location":"ml/algorithm/unsupervised/hierarchical-clustering.html","title":"Hierarchical Clustering","text":""},{"location":"ml/algorithm/unsupervised/isolation-forest.html","title":"Isolation Forest","text":""},{"location":"ml/algorithm/unsupervised/k-means.html","title":"K-Means","text":""},{"location":"ml/algorithm/unsupervised/kernel-pca.html","title":"Kernel PCA","text":""},{"location":"ml/algorithm/unsupervised/locally-linear-embedding.html","title":"Locally Linear Embedding","text":""},{"location":"ml/algorithm/unsupervised/one-class-svm.html","title":"One Class SVM","text":""},{"location":"ml/algorithm/unsupervised/principal-component-analysis.html","title":"Principal Component Analysis","text":""},{"location":"ml/algorithm/unsupervised/t-distributed-stochastic-neighbor-embedding.html","title":"t-Distributed Stochastic Neighbor Embedding","text":""},{"location":"ml/concept/cost-function.html","title":"Cost Function","text":"<p>Cost function measures the performance of a model by quantifying the difference between the predicted values and the actual values. The goal of a machine learning model is to minimize the cost function.</p> <p>For example, in linear regression, the training data is used to fit the parameters \\(w\\),\\(b\\) by minimizing a measure of the error between the predictions \\(f_{w,b}(x^{(i)})\\) and the actual data \\(y^{(i)}\\). During training we measure the cost over all the training samples \\(x^{(i)},y^{(i)}\\). The cost function is defined as:</p> \\[J(w,b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{w,b}(x^{(i)}) - y^{(i)})^2\\]"},{"location":"ml/concept/data.html","title":"Data","text":"<ul> <li>Data is the core of machine learning where general-purpose methodologies are designed to extract valuable patterns from data.</li> <li>For example, given a large corpus of documents, machine learning methods are used to automatically extract topics from the documents.</li> <li>Data is usually presented in the form of a numeric vector.</li> <li>Data is presented typically in tabular format where each row is an instance and each column is a feature.</li> </ul>"},{"location":"ml/concept/gradient-descent.html","title":"Gradient Descent","text":"<p>Gradient Descent is an optimization algorithm that is used to minimize the value of a function (e.g. cost function) by iteratively moving in the direction of the global minimum. In machine learning, gradient descent is used to update the parameter values of a model.</p>"},{"location":"ml/concept/hyperparameter.html","title":"Hyperparameter","text":"<p>A hyperparameter is a parameter that is set by the practitioner before the learning process begins. This is in contrast to model parameters which are learned from the data during the training process.</p>"},{"location":"ml/concept/hyperparameter.html#examples","title":"Examples","text":"<ol> <li>Learning Rate: Controls how much to change the model in response to the estimated error each time the model weights are updated.</li> <li>Number of Epochs: The number of times the learning algorithm will work through the entire training dataset.</li> <li>Batch Size: The number of training examples utilized in one iteration.</li> <li>Number of Hidden Layers and Units: In neural networks, this determines the depth and complexity of the model.</li> <li>Regularization Parameters: Such as L1 or L2 regularization, which help prevent overfitting by penalizing large weights.</li> <li>Momentum: Used in optimization algorithms to accelerate gradients vectors in the right directions, thus leading to faster converging.</li> <li>Number of Trees in a Random Forest: Determines the number of decision trees in the ensemble.</li> </ol>"},{"location":"ml/concept/learning-rate.html","title":"Learning Rate","text":"<p>The learning rate is a hyperparameter that controls the step size at which the model\u2019s parameters are updated during training. It determines how much to change the model in response to the estimated error each time the model weights are updated.</p> <ul> <li>High Learning Rate: The model might converge too quickly to a suboptimal solution or even diverge, failing to find a good solution.</li> <li>Low Learning Rate: The training process will be very slow, and it might get stuck in a local minimum.</li> </ul>"},{"location":"ml/concept/learning.html","title":"Learning","text":"<ul> <li>Learning is a method to identify patterns in data by optimizing the parameters of a model.</li> </ul>"},{"location":"ml/concept/model.html","title":"Model","text":"<ul> <li>A model learns from training data if its performance improves after data is taken into account.</li> <li>A model is said to overfit if it performs well on training data but poorly on unseen data.</li> <li>On the other hand, a model is said to underfit if it performs poorly on both training and unseen data.</li> </ul>"},{"location":"ml/concept/model.html#process","title":"Process","text":"<p>A training feeds a learning algorithm. The learning algorithm then produces a function that maps the input to the output. The function is the model. The model takes an input feature and outputs a prediction.</p>"},{"location":"ml/concept/predictor.html","title":"Predictor","text":""},{"location":"ml/concept/regression.html","title":"Regression","text":"<p>In regression, the output variable is a continuous value, such as predicting the price of a house based on its size, or predicting the temperature based on time of day.</p>"},{"location":"ml/concept/training.html","title":"Training","text":"<p>Training is the process of teaching a machine learning model to recognize patterns in data. Training data is used to train the model to learn these patterns. </p>"},{"location":"ml/concept/training.html#example","title":"Example","text":"<p>Suppose we have a dataset for house prices given its square footage as follows:</p> Square Footage (x) Price (y) 1,000 300,000 2,000 500,000 3,000 700,000"},{"location":"ml/concept/training.html#notation","title":"Notation:","text":"<ul> <li>x: input features</li> <li>y: output targets</li> <li>m: number of instances</li> <li>(x, y): instance</li> <li>(x<sup>i</sup>, y<sup>i</sup>): Single training i-th instance</li> </ul>"},{"location":"ml/task/classification.html","title":"Classification","text":"<ul> <li>Classification is the task of predicting a discrete number of outcomes or classes.</li> <li>Binary classification is the task of predicting one of two classes.</li> </ul>"},{"location":"ml/task/density-estimation.html","title":"Density Estimation","text":"<ul> <li>Density estimation is the process of representing data in a compact form using a density from a parametric family such as a Gaussian or beta distribution.</li> <li>It involves determining an unknown function given only random samples or observations.</li> <li>Density estimation is used to find the density of a population by examining a random sample of data from that population.</li> </ul>"},{"location":"ml/task/dimensionality-reduction.html","title":"Dimensionality Reduction","text":"<ul> <li>Working with high-dimensional data is difficult as it becomes harder to analyze and visualize data.</li> <li>High-dimensional data is often over-complete, meaning that there are dimensions that are redundant and can be explained by other dimensions.</li> <li>Dimensionality reduction allows us to work with a more compact representation of the data while preserving most of the information.</li> </ul>"},{"location":"ml/task/regression.html","title":"Regression","text":"<ul> <li>The system predicts a value given a set of features.</li> </ul>"},{"location":"ml/type/batch-learning.html","title":"Batch Learning","text":""},{"location":"ml/type/instance-based-learning.html","title":"Instance-based learning","text":""},{"location":"ml/type/instance-based-learning.html#overview","title":"Overview","text":"<p>Instance-based learning (also known as memory-based or lazy learning) involves learning from training examples and generalizing to new instances based on similarity measures12.</p>"},{"location":"ml/type/instance-based-learning.html#pros","title":"Pros","text":"<ul> <li>Flexibility: Can adapt to new data without retraining.</li> <li>Simplicity: Easy to implement and understand.</li> </ul>"},{"location":"ml/type/instance-based-learning.html#cons","title":"Cons","text":"<ul> <li>Time Complexity: High time complexity, especially with large datasets.</li> <li>Storage Requirements: Requires storing all training data.</li> </ul>"},{"location":"ml/type/instance-based-learning.html#examples","title":"Examples","text":"<ul> <li>K-Nearest Neighbors (KNN)</li> <li>Locally Weighted Learning (LWL)</li> <li>Case-Based Reasoning (CBR)</li> </ul>"},{"location":"ml/type/model-based-learning.html","title":"Model-based Learning","text":""},{"location":"ml/type/online-learning.html","title":"Online Learning","text":""},{"location":"ml/type/reinforcement-learning.html","title":"Reinforcement Learning","text":""},{"location":"ml/type/semi-supervised-learning.html","title":"Semi-supervised Learning","text":"<ul> <li>Semi-supervised learning is a type of machine learning that uses a combination of labeled and unlabeled data for training.</li> <li>The reason for using unlabeled data is because its easier to obtain and less expensive than labeled data.</li> <li>Semi-supervised learning algorithms are useful when there is a small amount of labeled data and a large amount of unlabeled data.</li> <li>The objective of semi-supervised learning is to improve the performance of supervised learning algorithms by using unlabeled data.</li> </ul> <p>Info</p> <p>Most semi-supervised learning algorithms are a combination of supervised and unsupervised learning algorithms.</p>"},{"location":"ml/type/supervised-learning.html","title":"Supervised Learning","text":"<ul> <li>In order to train a machine learning model, we need to provide it with training data.</li> <li>The training data consists of a set of instances. Each instance is a pair of an input and an output. The input is a set of features and the output is a label.</li> <li>The goal of supervised learning is to learn a function that maps the input to the output.</li> </ul> <p>Info</p> <p>The term feature is used interchangeably with the term attribute. An attribute usually denotes a property name only while a feature denotes a property name and value.</p> <p>The output variable can either be a regression or a classification value.</p>"},{"location":"ml/type/supervised-learning.html#examples","title":"Examples","text":"<p>The following are examples of machine learning algorithms that use supervised learning:</p> <ol> <li>Linear Regression</li> <li>Logistic Regression</li> <li>Support Vector Machine</li> <li>Decision Tree</li> <li>Random Forest</li> <li>Neural Network</li> <li>k-Nearest Neighbors</li> </ol>"},{"location":"ml/type/unsupervised-learning.html","title":"Unsupervised Learning","text":"<ul> <li>Unsupervised learning uses unlabeled data for training.</li> <li>This is particularly useful in problems where it is difficult to obtain labeled data.</li> <li>Unsupervised learning algorithms are useful for discovering patterns in data.</li> <li>The goal of unsupervised learning is use a feature vector as input and either outputs a feature vector or a label/value.</li> </ul>"},{"location":"ml/type/unsupervised-learning.html#use-cases","title":"Use Cases","text":"<ul> <li>Clustering algorithm takes a feature vector as input and outputs a label. </li> <li>Dimensionality reduction algorithms take a feature vector as input and output a feature vector with less features.</li> <li>Anomaly detection algorithms take a feature vector as input and output is a real number indicating the degree of anomaly.</li> </ul>"},{"location":"ml/type/unsupervised-learning.html#examples","title":"Examples","text":"<ul> <li>Clustering:<ul> <li>k-Means</li> <li>Hierarchical Clustering</li> <li>DBScan</li> </ul> </li> <li>Anomaly Detection:<ul> <li>Isolation Forest</li> <li>One-class SVM</li> </ul> </li> <li>Dimensionality Reduction:<ul> <li>Principal Component Analysis</li> <li>t-Distributed Stochastic Neighbor Embedding</li> <li>Kernel PCA</li> <li>Locally Linear Embedding</li> </ul> </li> <li>Association Rule Learning:<ul> <li>Apriori</li> <li>Eclat</li> </ul> </li> </ul>"},{"location":"python/python.html","title":"Python","text":"<p>The following notes are a set of primers into using python. It covers the following topics:</p> <ol> <li>Language: Primer for a set of topics that cover the python programming language.</li> <li>Libraries: Primer of important libraries that are mainly used in data science.</li> </ol>"},{"location":"python/language/classes.html","title":"Classes","text":"<p>A Python class is a blueprint for creating objects that bundle data (attributes) and behavior (methods). It defines a custom type by specifying the structure and functionality that its instances will have, supporting encapsulation and reuse. Classes enable object-oriented features like inheritance and polymorphism, allowing extension and customization of behavior.</p> <pre><code>class Car:\n    def __init__(self, make, model, year):\n        self.make = make\n        self.model = model\n        self.year = year\n\n    def display(self):\n        print(f\" {self.year} {self.make} {self.model}\")\n</code></pre> <ul> <li>init() : is the instance initializer that runs automatically after a new object is created typically used to set up initial state (attributes) for that instance.</li> <li>self :  is the reference to the current object, passed as the first parameter to instance methods so you can access and modify the object attributes and call its other methods.</li> </ul> <pre><code>car = Car(\"Volvo\", \"XC90\", \"2023\")\ncar.display()\ncar.model = \"XC60\"\ncar.display()\n</code></pre> <pre>\n<code> 2023 Volvo XC90\n 2023 Volvo XC60\n</code>\n</pre> <pre><code>class ElectricCar(Car):\n    def __init__(self, make, model, year):\n        super().__init__(make, model, year)\n\ncar = ElectricCar(\"Rivian\", \"R1S\", \"2023\")\ncar.display()\n</code></pre> <pre>\n<code> 2023 Rivian R1S\n</code>\n</pre> <ul> <li>super(): is a built-in function in Python that provides access to methods in a parent or superclass from a child class. It's commonly used in inheritance to call methods from the parent class, especially in the init method.</li> </ul>"},{"location":"python/language/classes.html#classes","title":"Classes","text":""},{"location":"python/language/classes.html#defining-a-class","title":"Defining a class","text":""},{"location":"python/language/classes.html#declaring-an-instance-of-a-class","title":"Declaring an instance of a class","text":""},{"location":"python/language/classes.html#inheritence","title":"Inheritence","text":""},{"location":"python/language/controlflow.html","title":"Control Flow","text":"<p>Python includes multiple constructs and statements for controlling flow.</p> <pre><code>condition = True\nif condition is True:\n    print(\"True\")\nelif condition is False:\n    print(\"False\")\nelse:\n    print(condition)\n</code></pre> <pre>\n<code>True\n</code>\n</pre> <pre><code>result = \"True\" if condition is True else \"False\"\nprint(result)\n</code></pre> <pre>\n<code>True\n</code>\n</pre> <pre><code>counter = 0\n\nwhile counter &lt; 3:\n    print(counter)\n    counter += 1\n</code></pre> <pre>\n<code>0\n1\n2\n</code>\n</pre> <pre><code>for x in range(3):\n    print(x)\n</code></pre> <pre>\n<code>0\n1\n2\n</code>\n</pre> <pre><code>for x in range(1,3):\n    print(x)\n</code></pre> <pre>\n<code>1\n2\n</code>\n</pre> <pre><code>for x in range(3):\n    if x == 1:\n        continue\n    elif x == 3:\n        break\n    else:\n        print(x)\n</code></pre> <pre>\n<code>0\n2\n</code>\n</pre>"},{"location":"python/language/controlflow.html#control-flow","title":"Control Flow","text":""},{"location":"python/language/controlflow.html#if-condition","title":"if condition","text":""},{"location":"python/language/controlflow.html#while-loop","title":"while loop","text":""},{"location":"python/language/controlflow.html#for-loop","title":"for loop","text":""},{"location":"python/language/counter.html","title":"Counter","text":"<p>A counter returns a defaultdict(int) of the items passed to it as a parameter</p> <pre><code>from collections import Counter\n\ncounter_list = Counter([0, 1, 2, 3, 0])\ncounter_list\n</code></pre> <pre>\n<code>Counter({0: 2, 1: 1, 2: 1, 3: 1})</code>\n</pre> <pre><code>document = \"Hello this is a test and this is another test.\"\n\nword_count = Counter(document.split(' '))\nword_count\n</code></pre> <pre>\n<code>Counter({'Hello': 1,\n         'this': 2,\n         'is': 2,\n         'a': 1,\n         'test': 1,\n         'and': 1,\n         'another': 1,\n         'test.': 1})</code>\n</pre>"},{"location":"python/language/counter.html#counter","title":"Counter","text":""},{"location":"python/language/dictionaries.html","title":"Dictionaries","text":"<p>Dictionaries data structure associates values with keys. The keys allows the quick retreival of values.</p> <pre><code>dict_one = {} #Pythonic\ndict_two = dict()\ndict_values = {\"Name\": \"John\"}\n</code></pre> <pre><code>dict_values[\"Name\"]\n</code></pre> <pre>\n<code>'John'</code>\n</pre> <pre><code>\"John\" in dict_values\n</code></pre> <pre>\n<code>False</code>\n</pre> <pre><code>\"Jack\" in dict_values\n</code></pre> <pre>\n<code>False</code>\n</pre> <pre><code>dict_values.get(\"Name\", 0)\n</code></pre> <pre>\n<code>'John'</code>\n</pre> <pre><code>dict_values.get(\"Address\", 0)\n</code></pre> <pre>\n<code>0</code>\n</pre> <pre><code>val = dict_values.get(\"Address\")\nprint(val)\n</code></pre> <pre>\n<code>None\n</code>\n</pre> <pre><code>dict_values[\"Name\"] = \"Adam\"\ndict_values[\"Address\"] = \"USA\"\nlen(dict_values)\n</code></pre> <pre>\n<code>2</code>\n</pre> <pre><code>dict_keys = dict_values.keys()\ndict_vals = dict_values.values()\ndict_items = dict_values.items()\n</code></pre> <pre><code>\"Name\" in dict_keys\n</code></pre> <pre>\n<code>True</code>\n</pre> <pre><code>\"Name\" in dict_values #Pythonic\n</code></pre> <pre>\n<code>True</code>\n</pre> <pre><code>\"Adam\" in dict_vals\n</code></pre> <pre>\n<code>True</code>\n</pre> <p>The defaultdict structure allows creating a dictionary where in the event that a key does not exist, the defaultdict would add a new key with the default value passed as its parameter.</p> <pre><code>from collections import defaultdict\ndocument = \"Hello this is a test and this is another test.\"\nword_count = defaultdict(int) \n\nfor word in document.split(' '):\n    word_count[word] += 1\n\nword_count\n</code></pre> <pre>\n<code>defaultdict(int,\n            {'Hello': 1,\n             'this': 2,\n             'is': 2,\n             'a': 1,\n             'test': 1,\n             'and': 1,\n             'another': 1,\n             'test.': 1})</code>\n</pre>"},{"location":"python/language/dictionaries.html#dictionaries","title":"Dictionaries","text":""},{"location":"python/language/dictionaries.html#definition","title":"Definition","text":""},{"location":"python/language/dictionaries.html#access","title":"Access","text":""},{"location":"python/language/dictionaries.html#modification","title":"Modification","text":""},{"location":"python/language/dictionaries.html#iterators","title":"Iterators","text":""},{"location":"python/language/dictionaries.html#defaultdict","title":"defaultdict","text":""},{"location":"python/language/exceptions.html","title":"Exceptions","text":"<p>An exception allows catching issues before they occur and add special handling to them.</p> <pre><code>try:\n    print(0/0)\nexcept:\n    print(\"All Exceptions\")\n</code></pre> <pre>\n<code>All Exceptions\n</code>\n</pre> <pre><code>try:\n    print(0/0)\nexcept ZeroDivisionError:\n    print(\"Divide by Zero Exception\")\n</code></pre> <pre>\n<code>Divide by Zero Exception\n</code>\n</pre>"},{"location":"python/language/exceptions.html#exceptions","title":"Exceptions","text":""},{"location":"python/language/functions.html","title":"Functions","text":"<p>A function is a rule that takes a set of inputs and returns a corresponding output.</p> <pre><code>def function_name(param):\n    \"\"\"\n    Docstring where the documentation of the function is present\n    \"\"\"\n    print(\"Output: \"+ str(param))\n    return param\n</code></pre> <pre><code>function_copy = function_name\nresult = function_copy(10)\n</code></pre> <pre>\n<code>Output: 10\n</code>\n</pre> <p>You can assign an annonymous (i.e. lambda) function to a variable</p> <pre><code>lambda_output = lambda x: x * 2\noutput = lambda_output(2)\nprint(output)\n</code></pre> <pre>\n<code>4\n</code>\n</pre> <p>You can also create an lambda function that is passed as a parameter to another function</p> <pre><code>def lambda_function(f):\n    return f(1)\n\nlambda_output = lambda_function(lambda x: x*2)\nprint(lambda_output)\n</code></pre> <pre>\n<code>2\n</code>\n</pre> <pre><code>def sample_function(first=\"Hi\", second=\"Amgad\"):\n    return first + \" \" + second\n\nprint(sample_function(\"Hi\"))\nprint(sample_function(\"Hi\", \"Amgad\"))\nprint(sample_function(first=\"Hi\", second=\"Amgad\"))\nprint(sample_function(second=\"Amgad\", first=\"Hi\"))\n</code></pre> <pre>\n<code>Hi World\nHi Amgad\nHi Amgad\nHi Amgad\n</code>\n</pre>"},{"location":"python/language/functions.html#functions","title":"Functions","text":""},{"location":"python/language/functions.html#definition","title":"Definition","text":""},{"location":"python/language/functions.html#assignment","title":"Assignment","text":""},{"location":"python/language/functions.html#lambda-functions","title":"Lambda Functions","text":""},{"location":"python/language/functions.html#default-parameters","title":"Default Parameters","text":""},{"location":"python/language/listcomprehensions.html","title":"List Comprehensions","text":"<p>List comprehensions allows elements of a list to be transformed given a specified condition.</p> <pre><code>even_numbers = [x for x in range(10) if x % 2 == 0]\nprint(even_numbers)\n</code></pre> <pre>\n<code>[0, 2, 4, 6, 8]\n</code>\n</pre> <p>This operation can also be used to transform elements from a list to a dictionary structure.</p> <pre><code>transform_list = {x:x *2 for x in range(1,10) if x % 2 == 0}\nprint(transform_list)\n</code></pre> <pre>\n<code>{2: 4, 4: 8, 6: 12, 8: 16}\n</code>\n</pre> <p>List comprehensions can include multiple for loops as well.</p> <pre><code>multiple_loops = [ (x,y) for x in range(1, 5) for y in range(x+1, 5)]\nprint(multiple_loops)\n</code></pre> <pre>\n<code>[(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]\n</code>\n</pre>"},{"location":"python/language/listcomprehensions.html#list-comprehensions","title":"List Comprehensions","text":""},{"location":"python/language/lists.html","title":"Lists","text":"<p>An ordered collection of items. The concept of lists is similar to the concept of arrays in other languages but with more extensive functionalities.</p> <pre><code>int_list = [10, 20, 30]\n</code></pre> <pre><code>mixed_list = [10, \"Hello\", 20.30]\n</code></pre> <pre><code>list_of_lists = [int_list, mixed_list, []]\n</code></pre> <pre><code>lst = [0, 1, 2, 3, 4]\n</code></pre> <pre><code>one = lst[0]\none\n</code></pre> <pre>\n<code>0</code>\n</pre> <pre><code>four = lst[-1]\nfour\n</code></pre> <pre>\n<code>4</code>\n</pre> <pre><code>three = lst[-2]\nthree\n</code></pre> <pre>\n<code>3</code>\n</pre> <pre><code>lst[0:-1]\n</code></pre> <pre>\n<code>[0, 1, 2, 3]</code>\n</pre> <pre><code>lst[:3]\n</code></pre> <pre>\n<code>[0, 1, 2]</code>\n</pre> <pre><code>lst[1:]\n</code></pre> <pre>\n<code>[1, 2, 3, 4]</code>\n</pre> <pre><code>lst[:] # Copy\n</code></pre> <pre>\n<code>[0, 1, 2, 3, 4]</code>\n</pre> <pre><code>lst[::2] # Every second element\n</code></pre> <pre>\n<code>[0, 2, 4]</code>\n</pre> <pre><code>lst[4:0:-1]\n</code></pre> <pre>\n<code>[4, 3, 2, 1]</code>\n</pre> <pre><code>lst + [5,6,7]\n</code></pre> <pre>\n<code>[1, 2, 3, 4, 5, 6, 7]</code>\n</pre> <pre><code>lst\n</code></pre> <pre>\n<code>[1, 2, 3, 4]</code>\n</pre> <pre><code>lst.extend([5,6,7])\nlst\n</code></pre> <pre>\n<code>[1, 2, 3, 4, 5, 6, 7]</code>\n</pre> <pre><code>lst = [1,2]\nx, y = lst\nprint(x, \" \", y)\n</code></pre> <pre>\n<code>1   2\n</code>\n</pre> <pre><code>_, y = lst\ny\n</code></pre> <pre>\n<code>2</code>\n</pre>"},{"location":"python/language/lists.html#lists","title":"Lists","text":""},{"location":"python/language/lists.html#defining-a-list","title":"Defining a List","text":""},{"location":"python/language/lists.html#accessing-a-list","title":"Accessing a List","text":""},{"location":"python/language/lists.html#slicing-a-list","title":"Slicing a List","text":""},{"location":"python/language/lists.html#extending-a-list","title":"Extending a List","text":""},{"location":"python/language/lists.html#unpack-a-list","title":"Unpack a List","text":""},{"location":"python/language/modules.html","title":"Modules","text":"<p>Modules encapsulate a set of features whether it be of the language or of third-party software.</p> <p>There are multiple ways to import modules:</p> <ol> <li>Import using the module name</li> </ol> <pre><code>import re\n\nmy_regex = re.compile(\"[0-9]+\", re.I)\n</code></pre> <ol> <li>Access module using an alias</li> </ol> <pre><code>import matplotlib.pyplot as plt\n</code></pre> <ol> <li>Import specific values from the module</li> </ol> <pre><code>from matplotlib import pyplot as plt\n</code></pre> <p>Users should avoid importing modules using * to avoid overriding local variables.</p> <pre><code>from matplotlib import * #AVOID DOING THIS IF POSSIBLE!\n</code></pre>"},{"location":"python/language/modules.html#modules","title":"Modules","text":""},{"location":"python/language/regexp.html","title":"Regular Expressions","text":"<p>Python regular expressions (regex) are compact pattern descriptions written in a special mini-language that let you search, match, extract, and transform substrings in text. In Python the built-in re module provides functions to compile and apply these patterns, supporting character classes, quantifiers, grouping, and lookaround assertions for powerful text processing.</p> <pre><code>import re\n</code></pre> <pre><code>import re\ntxt = \"Python is a programming language\"\nx = re.search(\"^Python.*language$\", txt)\nif x is not None:\n    print(\"Match Found\")\nelse:\n    print(\"Match not found\")\n</code></pre> <pre>\n<code>Match Found\n</code>\n</pre> <pre><code>import re\n\ntxt = \"Python is a programming language\"\nx = re.findall(\"i\", txt)\nprint(x)\n</code></pre> <pre>\n<code>['i', 'i']\n</code>\n</pre> <pre><code>import re\n\ntxt = \"Python is a programming language\"\nx = re.split(r\"\\s\", txt)\nprint(x)\n</code></pre> <pre>\n<code>['Python', 'is', 'a', 'programming', 'language']\n</code>\n</pre> <pre><code>import re\n\ntxt = \"Python is a programming language\"\nx = re.sub(r\"\\s\", \"X\", txt)\nprint(x)\n</code></pre> <pre>\n<code>PythonXisXaXprogrammingXlanguage\n</code>\n</pre> <pre><code>import re\n\ntxt = \"Python is #1 programming language\"\nx = re.search(r\"\\D+\", txt)\nif x is not None:\n    print(x.group())\nelse:\n    print(\"No match found\")\n</code></pre> <pre>\n<code>Python is #\n</code>\n</pre>"},{"location":"python/language/regexp.html#regular-expressions","title":"Regular Expressions","text":""},{"location":"python/language/regexp.html#module","title":"Module","text":""},{"location":"python/language/regexp.html#search","title":"search()","text":""},{"location":"python/language/regexp.html#findall","title":"findall()","text":""},{"location":"python/language/regexp.html#split","title":"split()","text":""},{"location":"python/language/regexp.html#sub","title":"sub()","text":""},{"location":"python/language/regexp.html#match-object","title":"Match Object","text":""},{"location":"python/language/sets.html","title":"Sets","text":"<p>A set is a data structure that represents a collection of unique elements. Sets are useful when a simpler structure than dictionaries are required.</p> <pre><code>example_set = {1, 2, 3 ,4}\nprint(example_set)\n</code></pre> <pre>\n<code>{1, 2, 3, 4}\n</code>\n</pre> <pre><code>example_set_two = set() # Sets cannot be defined as {} as they will appear empty.\n</code></pre> <pre>\n<code>{1}\n</code>\n</pre> <pre><code>example_set_two.add(1) # Add element to a set\nresult = 1 in example_set_two # Fast look-up\nprint(result)\n</code></pre> <pre>\n<code>True\n</code>\n</pre> <pre><code>example_set_three = set([1, 2, 2, 3, 4]) # Can take a list as an argument and generate a list, note the duplicates\nprint(example_set_three)\n</code></pre> <pre>\n<code>{1, 2, 3, 4}\n</code>\n</pre>"},{"location":"python/language/sets.html#sets","title":"Sets","text":""},{"location":"python/language/sets.html#definition","title":"Definition","text":""},{"location":"python/language/sets.html#usage","title":"Usage","text":""},{"location":"python/language/sorting.html","title":"Sorting","text":"<p>The lists data structure has an associated sort method that orders items in descending order.</p> <pre><code>sample_lst = [4,5,3,-8,9,0]\nsample_lst.sort() # Sort In-place\nprint(sample_lst)\n</code></pre> <pre>\n<code>[-8, 0, 3, 4, 5, 9]\n</code>\n</pre> <p>Alternatively, sorting can be done using the sorted method which retuns a copy of the list in sorted order</p> <pre><code>sorted(sample_lst)\n</code></pre> <pre>\n<code>[-8, 0, 3, 4, 5, 9]</code>\n</pre> <p>To change the order of the items in descending order, the reverse parameter can be used.</p> <pre><code>sorted(sample_lst, reverse=True)\n</code></pre> <pre>\n<code>[9, 5, 4, 3, 0, -8]</code>\n</pre> <p>A function can also be applied to elements before they become sorted.</p> <pre><code>sorted(sample_lst, key=abs) # Assume each element is absolute before they are sorted.\n</code></pre> <pre>\n<code>[0, 3, 4, 5, -8, 9]</code>\n</pre>"},{"location":"python/language/sorting.html#sorting","title":"Sorting","text":""},{"location":"python/language/strings.html","title":"Strings","text":"<p>Strings can be represented using single or double quotes:</p> <pre><code>str1 = \"Hello World\"\nstr2 = 'Hello World'\n</code></pre> <p>There are multiple ways to concatenate two string:</p> <pre><code>str1 = \"Hello\"\nstr2 = \"World\"\n</code></pre> <pre><code>both = str1 + \" \" + str2\nprint(both)\n</code></pre> <pre>\n<code>Hello World\n</code>\n</pre> <pre><code>both = \"{0} {1}\".format(str1, str2)\nprint(both)\n</code></pre> <pre>\n<code>Hello World\n</code>\n</pre> <pre><code>both = f\"{str1} {str2}\"\nprint(both)\n</code></pre> <pre>\n<code>Hello World\n</code>\n</pre>"},{"location":"python/language/strings.html#strings","title":"Strings","text":""},{"location":"python/language/strings.html#concatenation","title":"Concatenation","text":""},{"location":"python/language/strings.html#string-concatenation","title":"String Concatenation","text":""},{"location":"python/language/strings.html#format-concatenation","title":"Format Concatenation","text":""},{"location":"python/language/strings.html#f-string","title":"f-string","text":""},{"location":"python/language/tuples.html","title":"Tuples","text":"<p>Tuples are immutable lists so it supports all the same operations similar to a list with the exception of modifications. Tuples are defined either using parantheses (with comma separation) or just as a comma separated list.</p> <pre><code>my_list = [1, 2]\nmy_tuple = (1, 2)\nmy_second_tuple = 1, 2\n</code></pre> <pre><code>def add_multiply_function(x, y):\n    return (x + y), (x * y)\n</code></pre> <pre><code>results = add_multiply_function(2, 4)\nprint(results)\n</code></pre> <pre>\n<code>(6, 8)\n</code>\n</pre> <pre><code>add, multiply = add_multiply_function(3, 6)\nprint(add, multiply)\n</code></pre> <pre>\n<code>9 18\n</code>\n</pre> <pre><code>x, y = 10, 20\nx, y = y, x\nprint(x, y)\n</code></pre> <pre>\n<code>20 10\n</code>\n</pre>"},{"location":"python/language/tuples.html#tuples","title":"Tuples","text":""},{"location":"python/visualization/matplotlib.html","title":"Matplotlib","text":""},{"location":"python/visualization/matplotlib.html#matplotlib","title":"Matplotlib","text":""}]}